{"version":3,"sources":["config.js","request.js","setting.js","tools.js","validate.js"],"names":["backman","angular","module","config","$httpProvider","$urlRouterProvider","$controllerProvider","$compileProvider","$filterProvider","$provide","defaults","headers","put","post","get","X-Requested-With","transformRequest","data","param","obj","name","value","fullSubName","subName","subValue","innerObj","i","query","hasOwnProperty","Array","length","Object","undefined","encodeURIComponent","substr","isObject","String","aHrefSanitizationWhitelist","app","register","controller","directive","filter","factory","service","run","$rootScope","$state","$stateParams","_tools","success","state","code","noVerify","window","location","href","alert","msg","transKeyName","__state","error","err","$http","_responePreHandler","_setting","url","postData","ajaxParams","extend","method","then","getData","params","base","protocol","host","path","key","set","val","constant","urlData","getUrlParam","arr","split","l","a","type","json","toCamel","str","str2","indexOf","words","toUpperCase","join","toUnderline","test","replace","$1","toLowerCase","transform","json2","p","loadJs","jsList","$q","deferred","defer","$script","$apply","resolve","promise","isMobile","rgx","$","trim","isRequired","isMatchLength","len","isLengthInRange","isInRange","isIdCard","isTheSame","val1","val2","isCorrectPassword"],"mappings":"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","file":"backman.min.js","sourcesContent":["\r\n\r\nvar backman = angular.module('backman', ['ui.router']);\r\n\r\nbackman.config(function ($httpProvider, $urlRouterProvider, $controllerProvider, $compileProvider, $filterProvider, $provide) {\r\n\r\n    'use strict';\r\n\r\n    // 修正angularPost数据payload模式为formData模式\r\n    $httpProvider.defaults.headers.put['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    $httpProvider.defaults.headers.post['X-Requested-With'] = 'XMLHttpRequest';\r\n    $httpProvider.defaults.headers.get = {'X-Requested-With': 'XMLHttpRequest'};\r\n\r\n    // Override $http service's default transformRequest\r\n    $httpProvider.defaults.transformRequest = [function (data) {\r\n        /**\r\n         * The workhorse; converts an object to x-www-form-urlencoded serialization.\r\n         * @param {Object} obj\r\n         * @return {String}\r\n         */\r\n        var param = function (obj) {\r\n            var query = '';\r\n            var name, value, fullSubName, subName, subValue, innerObj, i;\r\n            for (name in obj) {\r\n                if (obj.hasOwnProperty(name)) {\r\n                    value = obj[name];\r\n                    if (value instanceof Array) {\r\n                        for (i = 0; i < value.length; ++i) {\r\n                            subValue = value[i];\r\n                            fullSubName = name + '[' + i + ']';\r\n                            innerObj = {};\r\n                            innerObj[fullSubName] = subValue;\r\n                            query += param(innerObj) + '&';\r\n                        }\r\n                    } else if (value instanceof Object) {\r\n                        for (subName in value) {\r\n                            if (value.hasOwnProperty(subName)) {\r\n                                subValue = value[subName];\r\n                                /* fullSubName = name + '[' + subName + ']'; //for node */\r\n                                fullSubName = name + '.' + subName;\r\n                                innerObj = {};\r\n                                innerObj[fullSubName] = subValue;\r\n                                query += param(innerObj) + '&';\r\n                            }\r\n                        }\r\n                    } else if (value !== undefined && value !== null) {\r\n                        query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';\r\n                    }\r\n                }\r\n            }\r\n            return query.length ? query.substr(0, query.length - 1) : query;\r\n        };\r\n        return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data;\r\n    }];\r\n\r\n    //增加angular自动过滤特殊url白名单\r\n    $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|ftp|mailto|tel|file|sms|javascript):/);\r\n\r\n    //异步controller注册器\r\n    app.register = {\r\n        controller: $controllerProvider.register,\r\n        directive: $compileProvider.directive,\r\n        filter: $filterProvider.register,\r\n        factory: $provide.factory,\r\n        service: $provide.service\r\n    };\r\n\r\n});\r\n\r\nbackman.run(function ($rootScope, $state, $stateParams) {\r\n\r\n    'use strict';\r\n\r\n    $rootScope.$state = $state;\r\n    $rootScope.$stateParams = $stateParams;\r\n\r\n});\r\n\r\n\r\n\r\n","// 服务：请求预处理\r\nbackman.factory('_responePreHandler', function (_tools) {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        //正常通行\r\n        success: function (success, config) {\r\n            if (success.data.state.code == 20001 && config && config.noVerify == true) {\r\n                return;\r\n            }\r\n            if (success.data.state.code == 20001) {\r\n                window.location.href = '/usercenter/login-show';\r\n                return;\r\n            }\r\n            //code级报错\r\n            if (success.data.state.code != 10200 && success.data.state.code != 10205) {\r\n                success.data.data = null;\r\n                //throw new Error('Server Error!\\n\\r   success + '\\n\\r   Message: ' + data.state.msg);\r\n                alert(success.msg || (success.data && success.data.state && success.data.state.msg));\r\n                return null;\r\n            }\r\n            //正常code\r\n            if (success.data.state.code == 10205) {\r\n                return {};\r\n            } else {\r\n                var data = success.data.data ? _tools.transKeyName('camel', success.data.data) : {};\r\n                data.__state = success.data.state;\r\n                return data;\r\n            }\r\n        },\r\n        //http级报错\r\n        error: function (err) {\r\n            return err;\r\n        }\r\n    };\r\n\r\n});\r\n\r\nbackman.factory('_httpPost', function ($http, _tools, _responePreHandler, _setting) {\r\n\r\n    'use strict';\r\n\r\n    return function (url, postData, config) {\r\n        if (!config || !config.ajaxParams) {\r\n            angular.extend(postData, _setting.ajaxParams);\r\n        }\r\n        postData = _tools.transKeyName('underline', postData);\r\n        return $http({\r\n            method: 'POST',\r\n            url: url,\r\n            data: postData\r\n        }).then(function (success) {\r\n                return _responePreHandler.success(success, config);\r\n            }, function (err) {\r\n                return _responePreHandler.error(err);\r\n            }\r\n        );\r\n    };\r\n\r\n});\r\n\r\nbackman.factory('_httpGet', function ($http, _tools, _responePreHandler, _setting) {\r\n\r\n    'use strict';\r\n\r\n    return function (url, getData, config) {\r\n        if (!config || !config.ajaxParams) {\r\n            angular.extend(getData, _setting.ajaxParams);\r\n        }\r\n        getData = _tools.transKeyName('underline', getData);\r\n        return $http({\r\n            method: 'GET',\r\n            url: url,\r\n            params: getData\r\n        }).then(function (success) {\r\n            return _responePreHandler.success(success, config);\r\n        }, function (err) {\r\n            return _responePreHandler.error(err);\r\n        });\r\n    };\r\n\r\n});","backman.factory('_setting', function ($rootScope) {\r\n\r\n    'use strict';\r\n\r\n    var data = {\r\n        base: location.protocol + '//' + location.host,\r\n        path: ''\r\n        // ,ajaxParams: {\"authClient\": \"app\", \"apiVersion\": \"v1\"}\r\n    };\r\n\r\n    return {\r\n        get: function (key) {\r\n            return data[key];\r\n        },\r\n        set: function (key, val) {\r\n            data[key] = val\r\n        }\r\n    };\r\n\r\n});","\r\nbackman.constant('_tools', (function () {\r\n\r\n    'use strict';\r\n\r\n    //获取url参数\r\n    var urlData = null;\r\n    var getUrlParam = function (name) {\r\n        if (!urlData) {\r\n            var url = window.location.href;\r\n            urlData = {};\r\n            var arr = url.split(\"?\");\r\n            if (arr.length > 1) {\r\n                arr = arr[1].split(\"&\");\r\n                for (var i = 0, l = arr.length; i < l; i++) {\r\n                    var a = arr[i].split(\"=\");\r\n                    urlData[a[0]] = a[1];\r\n                }\r\n                urlData = transKeyName('camel', urlData);\r\n            }\r\n        }\r\n        return urlData[name];\r\n    };\r\n\r\n    //峰驼与下划线命名模式转换\r\n    var transKeyName = function (type, json) {\r\n        //下划线字符串转小峰驼\r\n        var toCamel = function (str) {\r\n            var str2 = '';\r\n            if (str.indexOf('_') < 0) {\r\n                str2 = str;\r\n            } else {\r\n                var words = str.split('_');\r\n                for (var i = 1; i < words.length; i++) {\r\n                    words[i] = words[i].substr(0, 1).toUpperCase() + words[i].substr(1);\r\n                }\r\n                str2 = words.join('');\r\n            }\r\n            return str2;\r\n        };\r\n        //小峰驼字符串转下划线\r\n        var toUnderline = function (str) {\r\n            var str2 = '';\r\n            if ((/[A-Z]/).test(str)) {\r\n                str2 = str.replace(/([A-Z])/g, function ($1) {\r\n                    return '_' + $1.toLowerCase();\r\n                });\r\n            } else {\r\n                str2 = str;\r\n            }\r\n            return str2;\r\n        };\r\n        var transform = function (json, json2) {\r\n            for (var p in json) {\r\n                if (json.hasOwnProperty(p)) {\r\n                    var key;\r\n                    if (typeof p == 'string') {\r\n                        if (type == 'camel') {\r\n                            key = toCamel(p);\r\n                        } else if (type == 'underline') {\r\n                            key = toUnderline(p);\r\n                        }\r\n                    } else {\r\n                        key = p;\r\n                    }\r\n                    if (json[p] instanceof Object) {\r\n                        json2[key] = transform(json[p], typeof json[p].length == 'undefined' ? {} : []);\r\n                    } else {\r\n                        json2[key] = json[p];\r\n                    }\r\n                }\r\n            }\r\n            return json2;\r\n        };\r\n        return transform(json, typeof json.length == 'undefined' ? {} : []);\r\n    };\r\n\r\n    var loadJs = function (jsList) {\r\n        return function ($q, $rootScope) {\r\n            var deferred = $q.defer();\r\n            $script(jsList, function () {\r\n                $rootScope.$apply(function () {\r\n                    deferred.resolve();\r\n                });\r\n            });\r\n            return deferred.promise;\r\n        };\r\n    };\r\n\r\n    return {\r\n        getUrlParam: getUrlParam,\r\n        transKeyName: transKeyName,\r\n        loadJs: loadJs\r\n    };\r\n\r\n})());","backman.factory('_validate', function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        isMobile: function (val) {\r\n            var rgx = /^(13[0-9]|14[0-9]|15[0-9]|18[0-9])\\d{8}$/i;\r\n            return rgx.test($.trim(val));\r\n        },\r\n        isRequired: function (val) {\r\n            return $.trim(val) ? true : false;\r\n        },\r\n        isMatchLength: function (val, len) {\r\n            return (($.trim(val)).length == len);\r\n        },\r\n        isLengthInRange: function (val, arr) {\r\n            var len = ($.trim(val)).length;\r\n            return (len >= arr[0] && len <= arr[1]);\r\n        },\r\n        isInRange: function (val, arr) {\r\n            return (val >= arr[0] && val <= arr[1]);\r\n        },\r\n        isIdCard: function (val) {\r\n            var rgx = /^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{4}$/;\r\n            return rgx.test($.trim(val));\r\n        },\r\n        isTheSame: function (val1, val2) {\r\n            return (val1 == val2);\r\n        },\r\n        // 验证密码\r\n        isCorrectPassword: function (val) {\r\n            // 只包含数字或字母\r\n            var rgx = /^(?!\\d+$)(?![a-z]+$).+$/i;\r\n            return rgx.test($.trim(val));\r\n        }\r\n    };\r\n});"],"sourceRoot":"build/backman/"}