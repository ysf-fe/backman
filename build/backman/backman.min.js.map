{"version":3,"sources":["config.js","request.js","setting.js","tools.js","validate.js","framework.js","navigation.js","datepick.js","editor.js","uploadImg.js","verify.js"],"names":["backman","angular","module","config","$httpProvider","$urlRouterProvider","$controllerProvider","$compileProvider","$filterProvider","$provide","defaults","headers","put","post","get","X-Requested-With","transformRequest","data","param","obj","name","value","fullSubName","subName","subValue","innerObj","i","query","hasOwnProperty","Array","length","Object","undefined","encodeURIComponent","substr","isObject","String","aHrefSanitizationWhitelist","run","$rootScope","$state","$stateParams","dependences","app","concat","register","controller","directive","filter","factory","service","_tools","_setting","success","state","code","noVerify","layer","alert","icon","title","closeBtn","setTimeout","window","location","href","transKeyName","__state","str","msg","error","err","status","statusText","$http","_responePreHandler","url","postData","globAjaxParams","extend","method","then","getData","params","_data","base","protocol","host","path","pathname","split","navListUrl","loginUrl","logoutUrl","globUploadImg","key","set","val","$","type","constant","urlData","getUrlParam","arr","l","a","json","toCamel","str2","indexOf","words","toUpperCase","join","toUnderline","test","replace","$1","toLowerCase","transform","json2","p","parseInt","JSON","parse","stringify","loadJs","jsList","$q","deferred","defer","$script","$apply","resolve","promise","isMobile","rgx","trim","isRequired","isMatchLength","len","isLengthInRange","isInRange","isIdCard","isTheSame","val1","val2","isCorrectPassword","$scope","sidebarOpen","act","toggleSidebar","_httpGet","getNavData","cb","cberr","apiAddress","item1","navList","hash","children","item2","j","push","renderNavigation","sort","sortNavigation","item","navData","order","scope","bindDate","restrict","link","iElm","iAttrs","format","dateFormat","timePick","eid","id","Date","now","Math","random","attr","addClass","on","$this","this","dispatchEvent","MouseEvent","bubbles","cancelable","view","one","$$phase","$root","laydate","elem","istime","event","choose","dates","initW","$watch","newVal","oldVal","bindContent","editor","KindEditor","create","items","width","height","resizeMode","allowFileManager","imageUploadJson","imageUploadUrl","afterChange","html","parent","hasClass","removeClass","end","next","slideUp","slideDown","navInitHandler","newValue","oldValue","find","each","$parent1","show","$parent2","_httpPost","bindId","bindUrl","template","upAjaxing","delImg","confirm","index","close","upload","img","opt","sendDate","parameters","fileKeyName","src","imgId","tips","files","imgSize","reader","FileReader","onload","e","Image","matchs","match","console","log","target","result","readAsDataURL","$win","widthW","heightW","naturalWidth","naturalHeight","size","open","shade","shadeClose","move","skin","content","area","priority","fName","$forms","bindVerify","verifyItem","_validations","require","_dirtyState","verifyMsg","$curForm","closest","$timeout","bmVerifyControl"],"mappings":"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","file":"backman.min.js","sourcesContent":["var backman = angular.module('backman', ['ui.router']);\r\n\r\nbackman.config(function ($httpProvider, $urlRouterProvider, $controllerProvider, $compileProvider, $filterProvider, $provide) {\r\n\r\n    'use strict';\r\n\r\n    // 修正angularPost数据payload模式为formData模式\r\n    $httpProvider.defaults.headers.put['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    $httpProvider.defaults.headers.post['X-Requested-With'] = 'XMLHttpRequest';\r\n    $httpProvider.defaults.headers.get = {'X-Requested-With': 'XMLHttpRequest'};\r\n\r\n    // Override $http service's default transformRequest\r\n    $httpProvider.defaults.transformRequest = [function (data) {\r\n        /**\r\n         * The workhorse; converts an object to x-www-form-urlencoded serialization.\r\n         * @param {Object} obj\r\n         * @return {String}\r\n         */\r\n        var param = function (obj) {\r\n            var query = '';\r\n            var name, value, fullSubName, subName, subValue, innerObj, i;\r\n            for (name in obj) {\r\n                if (obj.hasOwnProperty(name)) {\r\n                    value = obj[name];\r\n                    if (value instanceof Array) {\r\n                        for (i = 0; i < value.length; ++i) {\r\n                            subValue = value[i];\r\n                            fullSubName = name + '[' + i + ']';\r\n                            innerObj = {};\r\n                            innerObj[fullSubName] = subValue;\r\n                            query += param(innerObj) + '&';\r\n                        }\r\n                    } else if (value instanceof Object) {\r\n                        for (subName in value) {\r\n                            if (value.hasOwnProperty(subName)) {\r\n                                subValue = value[subName];\r\n                                /* fullSubName = name + '[' + subName + ']'; //for node */\r\n                                fullSubName = name + '.' + subName;\r\n                                innerObj = {};\r\n                                innerObj[fullSubName] = subValue;\r\n                                query += param(innerObj) + '&';\r\n                            }\r\n                        }\r\n                    } else if (value !== undefined && value !== null) {\r\n                        query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';\r\n                    }\r\n                }\r\n            }\r\n            return query.length ? query.substr(0, query.length - 1) : query;\r\n        };\r\n        return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data;\r\n    }];\r\n\r\n    //增加angular自动过滤特殊url白名单\r\n    $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|ftp|mailto|tel|file|sms|javascript):/);\r\n\r\n});\r\n\r\n//路由转接\r\nbackman.run(function ($rootScope, $state, $stateParams) {\r\n\r\n    'use strict';\r\n\r\n    $rootScope.$state = $state;\r\n    $rootScope.$stateParams = $stateParams;\r\n\r\n});\r\n\r\n//backman创建模块\r\nbackman.module = function (name, dependences) {\r\n\r\n    'use strict';\r\n\r\n    var app = angular.module(name, ['backman'].concat(dependences));\r\n    app.config(function($controllerProvider, $compileProvider, $filterProvider, $provide){\r\n        //异步controller注册器\r\n        app.register = {\r\n            controller: $controllerProvider.register,\r\n            directive: $compileProvider.directive,\r\n            filter: $filterProvider.register,\r\n            factory: $provide.factory,\r\n            service: $provide.service\r\n        };\r\n    });\r\n    return app;\r\n\r\n};\r\n\r\n\r\n\r\n","// 服务：请求预处理\r\nbackman.factory('_responePreHandler', function (_tools, _setting) {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        //正常通行\r\n        success: function (success, config) {\r\n            //需要重新登录\r\n            if (success.data.state.code == 20001) {\r\n                if (config && config.noVerify == true) {\r\n                    return null;\r\n                }\r\n                layer.alert('您的登录已失效，即将跳转登录页...', {icon: 0, title: false, closeBtn: 0}, function () {});\r\n                setTimeout(function () {\r\n                    window.location.href = _setting.get('loginUrl');\r\n                }, 3000);\r\n                return null;\r\n            }\r\n            //正常code：10200\r\n            if (success.data.state.code == 10200) {\r\n                var data = success.data.data ? _tools.transKeyName('camel', success.data.data) : {};\r\n                data.__state = _tools.transKeyName('camel', success.data.state);\r\n                return data;\r\n            }\r\n            //正常code：10205\r\n            else if (success.data.state.code == 10205) {\r\n                return {__state: _tools.transKeyName('camel', success.data.state)};\r\n            }\r\n            //报错code\r\n            else {\r\n                var str = '错误：code ' + success.data.state.code + '<br>' + (success.data.state && success.data.state.msg);\r\n                layer.alert(str, {icon: 2, title: '通讯内容有误！'});\r\n                return null;\r\n            }\r\n        },\r\n        //http级报错\r\n        error: function (err) {\r\n            layer.alert('错误：status ' + err.status + ' ' + err.statusText, {icon: 2, title: '建立通讯失败！'});\r\n            return null;\r\n        }\r\n    };\r\n\r\n});\r\n\r\nbackman.factory('_httpPost', function ($http, _tools, _responePreHandler, _setting) {\r\n\r\n    'use strict';\r\n\r\n    return function (url, postData, config) {\r\n        if (!config || !config.globAjaxParams) {\r\n            angular.extend(postData, _setting.globAjaxParams);\r\n        }\r\n        postData = _tools.transKeyName('underline', postData);\r\n        return $http({\r\n            method: 'POST',\r\n            url: url,\r\n            data: postData\r\n        }).then(function (success) {\r\n                return _responePreHandler.success(success, config);\r\n            }, function (err) {\r\n                return _responePreHandler.error(err);\r\n            }\r\n        );\r\n    };\r\n\r\n});\r\n\r\nbackman.factory('_httpGet', function ($http, _tools, _responePreHandler, _setting) {\r\n\r\n    'use strict';\r\n\r\n    return function (url, getData, config) {\r\n        if (!config || !config.globAjaxParams) {\r\n            angular.extend(getData, _setting.globAjaxParams);\r\n        }\r\n        getData = _tools.transKeyName('underline', getData);\r\n        return $http({\r\n            method: 'GET',\r\n            url: url,\r\n            params: getData\r\n        }).then(function (success) {\r\n            return _responePreHandler.success(success, config);\r\n        }, function (err) {\r\n            return _responePreHandler.error(err);\r\n        });\r\n    };\r\n\r\n});","backman.factory('_setting', function ($rootScope) {\r\n\r\n    'use strict';\r\n\r\n    var _data = {\r\n        base: location.protocol + '//' + location.host,\r\n        path: '/' + location.pathname.split('/index.html')[0],\r\n        globAjaxParams: {}\r\n    };\r\n    _data.path = _data.path == '/' ? '' : _data.path;\r\n\r\n    //左侧导航栏接口地址\r\n    _data.navListUrl = _data.base + _data.path + '/_data/navList.json';\r\n\r\n    //登录页地址\r\n    _data.loginUrl = _data.base + _data.path + '/login.html';\r\n\r\n    //退出登录接口地址\r\n    _data.logoutUrl = _data.base + _data.path + '';\r\n\r\n    //全局图片上传设置\r\n    _data.globUploadImg = {};\r\n\r\n    return {\r\n        get: function (key) {\r\n            return _data[key];\r\n        },\r\n        set: function (key, val) {\r\n            if (key == 'globAjaxParams') {\r\n                if ($.type(val) == 'object') {\r\n                    angular.extend(_data.globAjaxParams, val);\r\n                }\r\n            } else if (key == 'globUploadImg') {\r\n                if ($.type(val) == 'object') {\r\n                    angular.extend(_data.globUploadImg, val);\r\n                }\r\n            } else {\r\n                _data[key] = val;\r\n            }\r\n        }\r\n    };\r\n\r\n});","\r\nbackman.constant('_tools', (function () {\r\n\r\n    'use strict';\r\n\r\n    //获取url参数\r\n    var urlData = null;\r\n    var getUrlParam = function (name) {\r\n        if (!urlData) {\r\n            var url = window.location.href;\r\n            urlData = {};\r\n            var arr = url.split(\"?\");\r\n            if (arr.length > 1) {\r\n                arr = arr[1].split(\"&\");\r\n                for (var i = 0, l = arr.length; i < l; i++) {\r\n                    var a = arr[i].split(\"=\");\r\n                    urlData[a[0]] = a[1];\r\n                }\r\n                urlData = transKeyName('camel', urlData);\r\n            }\r\n        }\r\n        return urlData[name];\r\n    };\r\n\r\n    //峰驼与下划线命名模式转换\r\n    var transKeyName = function (type, json) {\r\n        //下划线字符串转小峰驼\r\n        var toCamel = function (str) {\r\n            var str2 = '';\r\n            if (str.indexOf('_') < 0) {\r\n                str2 = str;\r\n            } else {\r\n                var words = str.split('_');\r\n                for (var i = 1; i < words.length; i++) {\r\n                    words[i] = words[i].substr(0, 1).toUpperCase() + words[i].substr(1);\r\n                }\r\n                str2 = words.join('');\r\n            }\r\n            return str2;\r\n        };\r\n        //小峰驼字符串转下划线\r\n        var toUnderline = function (str) {\r\n            var str2 = '';\r\n            if ((/[A-Z]/).test(str)) {\r\n                str2 = str.replace(/([A-Z])/g, function ($1) {\r\n                    return '_' + $1.toLowerCase();\r\n                });\r\n            } else {\r\n                str2 = str;\r\n            }\r\n            return str2;\r\n        };\r\n        var transform = function (json, json2) {\r\n            for (var p in json) {\r\n                if (json.hasOwnProperty(p)) {\r\n                    var key;\r\n                    //字符串进行键名转换\r\n                    if (!/^\\d+$/.test(p)) {\r\n                        if (type == 'camel') {\r\n                            key = toCamel(p);\r\n                        } else if (type == 'underline') {\r\n                            key = toUnderline(p);\r\n                        }\r\n                    }\r\n                    //数值直接传递\r\n                    else {\r\n                        key = parseInt(p);\r\n                    }\r\n                    //属性为对象时，递归转换\r\n                    if (json[p] instanceof Object) {\r\n                        json2[key] = transform(json[p], $.type(json[p]) == 'array' ? [] : {});\r\n                    }\r\n                    //属性非对象，为字符串但内容符合json格式，递归转换\r\n                    else if ($.type(json[p]) == 'string' && /^[\\{\\[]+(\"([a-zA-Z][a-zA-Z0-9\\-_]*?)\"\\:(.+?))+[\\}\\]]+$/.test(json[p])) {\r\n                        json2[key] = JSON.parse(json[p]);\r\n                        json2[key] = transform(json2[key], $.type(json2[key]) == 'array' ? [] : {});\r\n                        json2[key] = JSON.stringify(json2[key]);\r\n                    }\r\n                    //属性非对象，非json字符串，直接传递\r\n                    else {\r\n                        json2[key] = json[p];\r\n                    }\r\n                }\r\n            }\r\n            return json2;\r\n        };\r\n        return transform(json, $.type(json) == 'array' ? [] : {});\r\n    };\r\n\r\n    var loadJs = function (jsList) {\r\n        return function ($q, $rootScope) {\r\n            var deferred = $q.defer();\r\n            $script(jsList, function () {\r\n                $rootScope.$apply(function () {\r\n                    deferred.resolve();\r\n                });\r\n            });\r\n            return deferred.promise;\r\n        };\r\n    };\r\n\r\n    return {\r\n        getUrlParam: getUrlParam,\r\n        transKeyName: transKeyName,\r\n        loadJs: loadJs\r\n    };\r\n\r\n})());","backman.factory('_validate', function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        isMobile: function (val) {\r\n            var rgx = /^(13[0-9]|14[0-9]|15[0-9]|18[0-9])\\d{8}$/i;\r\n            return rgx.test($.trim(val));\r\n        },\r\n        isRequired: function (val) {\r\n            return $.trim(val) ? true : false;\r\n        },\r\n        isMatchLength: function (val, len) {\r\n            return (($.trim(val)).length == len);\r\n        },\r\n        isLengthInRange: function (val, arr) {\r\n            var len = ($.trim(val)).length;\r\n            return (len >= arr[0] && len <= arr[1]);\r\n        },\r\n        isInRange: function (val, arr) {\r\n            return (val >= arr[0] && val <= arr[1]);\r\n        },\r\n        isIdCard: function (val) {\r\n            var rgx = /^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{4}$/;\r\n            return rgx.test($.trim(val));\r\n        },\r\n        isTheSame: function (val1, val2) {\r\n            return (val1 == val2);\r\n        },\r\n        // 验证密码\r\n        isCorrectPassword: function (val) {\r\n            // 只包含数字或字母\r\n            var rgx = /^(?!\\d+$)(?![a-z]+$).+$/i;\r\n            return rgx.test($.trim(val));\r\n        }\r\n    };\r\n});","backman.controller('backmanFramework', function ($scope, _setting) {\r\n\r\n    'use strict';\r\n\r\n    //移动端导航栏显示隐藏\r\n    $scope.sidebarOpen = false;\r\n\r\n    $scope.act = {\r\n        //导航栏移动端显示隐藏\r\n        toggleSidebar: function () {\r\n            $scope.sidebarOpen = !$scope.sidebarOpen;\r\n        }\r\n    };\r\n\r\n});","backman.directive('bmSidebar', function () {\r\n    return {\r\n        scope: false,\r\n        restrict: 'A',\r\n        link: function ($scope, iElm, iAttrs) {\r\n            iElm.on('click', '.treeview-title', function () {\r\n                var $this = $(this);\r\n                if ($this.parent().hasClass('active')) {\r\n                    $this.parent().removeClass('active').end()\r\n                        .next('ul.treeview-menu').slideUp('fast');\r\n                } else {\r\n                    $this.parent().addClass('active').end()\r\n                        .next('ul.treeview-menu').slideDown('fast');\r\n                }\r\n            });\r\n            var navInitHandler = $scope.$watch('navData', function (newValue, oldValue) {\r\n                if (newValue) {\r\n                    navInitHandler();  //仅运行一次\r\n                    var hash = window.location.hash;\r\n                    setTimeout(function () {\r\n                        iElm.find('.treeview-link').each(function () {\r\n                            var $this = $(this);\r\n                            if ($this.attr('href') == hash) {\r\n                                var $parent1 = $this.parent().parent().show().parent().addClass('active');\r\n                                if ($parent1.hasClass('treeview')) {\r\n                                    var $parent2 = $parent1.parent().show().parent().addClass('active');\r\n                                    if ($parent2.hasClass('treeview')) {\r\n                                        $parent2.addClass('active');\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }, 0);\r\n                }\r\n            });\r\n        }\r\n    }\r\n});","backman.directive('bmDatepick', function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        scope: {\r\n            bindDate: '='\r\n        },\r\n        restrict: 'A',\r\n        link: function ($scope, iElm, iAttrs) {\r\n            var format = iAttrs.dateFormat || 'YYYY-MM-DD hh:mm:ss'; //日期格式\r\n            var timePick = /(hh|mm|ss)+/g.test(format); //是否开启时间选择\r\n            var eid = iAttrs.id || 'datepick' + (Date.now() % 1e7) + parseInt(Math.random() * 1e3);\r\n            iElm.attr('id', eid)\r\n                .attr('placeholder', format)\r\n                .addClass('laydate-icon')\r\n                .on('click', function () {\r\n                    var $this = $(this);\r\n                    if (!$this.attr('readonly')) {\r\n                        $this[0].dispatchEvent(new MouseEvent('dblclick', {\r\n                            bubbles: true,\r\n                            cancelable: true,\r\n                            view: window\r\n                        }))\r\n                    }\r\n                });\r\n            $('#' + eid).one('dblclick', function () {\r\n                var $this = $(this);\r\n                setTimeout(function(){\r\n                    $('#laydate_today').on('click', function () {\r\n                        $scope.bindDate = $this.val();\r\n                        if (!$scope.$$phase && !$scope.$root.$$phase) {\r\n                            $scope.$apply();\r\n                        }\r\n                    });\r\n                }, 0);\r\n            });\r\n            laydate({\r\n                elem: '#' + eid,\r\n                format: format,\r\n                istime: timePick,\r\n                event: 'dblclick',\r\n                choose: function (dates) {\r\n                    $scope.bindDate = dates;\r\n                    if (!$scope.$$phase && !$scope.$root.$$phase) {\r\n                        $scope.$apply();\r\n                    }\r\n                }\r\n            });\r\n            //初次数据\r\n            var initW = $scope.$watch('bindDate', function (newVal, oldVal) {\r\n                if (newVal) {\r\n                    initW();\r\n                    iElm.val(newVal);\r\n                }\r\n            });\r\n        }\r\n    }\r\n});","backman.directive('bmEditor', function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        scope: {\r\n            bindContent: '='\r\n        },\r\n        restrict: 'A',\r\n        link: function ($scope, iElm, iAttrs) {\r\n            var eid = iAttrs.id || 'editor' + (Date.now() % 1e7) + parseInt(Math.random() * 1e3);\r\n            iElm.attr('id', eid);\r\n            var editor = KindEditor.create('#' + eid, {\r\n                items: [\r\n                    \"source\", \"|\",\r\n                    \"undo\", \"redo\", \"|\",\r\n                    \"template\", \"code\", \"|\",\r\n                    \"cut\", \"copy\", \"paste\", \"plainpaste\", \"wordpaste\", \"|\",\r\n                    \"justifyleft\", \"justifycenter\", \"justifyright\", \"justifyfull\", \"insertorderedlist\",\r\n                    \"insertunorderedlist\", \"indent\", \"outdent\", \"subscript\", \"superscript\", \"clearhtml\",\r\n                    \"quickformat\", \"|\", \"selectall\", \"fullscreen\", \"/\",\r\n                    \"formatblock\", \"fontname\", \"fontsize\", \"|\",\r\n                    \"forecolor\", \"hilitecolor\", \"bold\", \"italic\", \"underline\", \"strikethrough\", \"lineheight\",\r\n                    \"removeformat\", \"|\",\r\n                    \"image\", \"table\", \"hr\", \"emoticons\", \"baidumap\", \"pagebreak\", \"anchor\", \"link\", \"unlink\", \"|\",\r\n                    \"preview\", \"print\", \"about\"\r\n                ],\r\n                width: '100%',\r\n                height: '270px',\r\n                resizeMode: 1,\r\n                allowFileManager: false,\r\n                imageUploadJson: iAttrs.imageUploadUrl || '',\r\n                afterChange: function () {\r\n                    if (editor && editor.html()) {\r\n                        $scope.bindContent = editor.html();\r\n                        if (!$scope.$$phase && !$scope.$root.$$phase) {\r\n                            $scope.$apply();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            //初次数据\r\n            var initW = $scope.$watch('bindContent', function (newVal, oldVal) {\r\n                if (newVal) {\r\n                    initW();\r\n                    editor.html(newVal + '');\r\n                }\r\n            });\r\n        }\r\n    }\r\n});","backman.directive('bmUploadImg', function (_setting, _httpPost) {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        scope: {\r\n            bindId: '=',\r\n            bindUrl: '='\r\n        },\r\n        restrict: 'A',\r\n        template: '<div class=\"bm-upload-img-bg img-thumbnail\">' +\r\n        '  <i class=\"fa fa-image\"></i><i class=\"fa fa-plus\"></i></div>' +\r\n        '<div class=\"bm-upload-img-input\"><input type=\"file\" /></div>' +\r\n        '<div class=\"bm-upload-img-uping\" ng-if=\"state.upAjaxing\" title=\"上传中，请稍后...\">' +\r\n        '  <i class=\"fa fa-spinner\"></i></div>' +\r\n        '<div class=\"bm-upload-img-view img-thumbnail\" ng-if=\"bindUrl\">' +\r\n        '  <span><img ng-src=\"{{bindUrl}}\"/></span>' +\r\n        '  <i class=\"fa fa-times\" ng-click=\"act.delImg()\"></i>' +\r\n        '</div>',\r\n        link: function ($scope, iElm, iAttrs) {\r\n            var eid = iAttrs.id || 'uploadImg' + (Date.now() % 1e7) + parseInt(Math.random() * 1e3);\r\n            iElm.addClass('bm-upload-img').attr('id', eid);\r\n            $scope.state = {\r\n                upAjaxing: false  //显示上传中\r\n            };\r\n            //交互\r\n            $scope.act = {\r\n                delImg: function () {\r\n                    layer.confirm('<img class=\"bm-upload-img-del\" src=\"' + $scope.bindUrl + '\"/>',\r\n                        {title: '确认删除此图片？'}, function (index) {\r\n                            layer.close(index);\r\n                            $scope.bindId = $scope.bindUrl = '';\r\n                            if (!$scope.$$phase && !$scope.$root.$$phase) {\r\n                                $scope.$apply();\r\n                            }\r\n                        });\r\n                }\r\n            };\r\n            //上传图片\r\n            var upload = function (img) {\r\n                var opt = _setting.get('globUploadImg');\r\n                var sendDate = opt.parameters;\r\n                sendDate[opt.fileKeyName] = img.src;\r\n                _httpPost(opt.url, sendDate)\r\n                    .then(function (data) {\r\n                        $scope.state.upAjaxing = false;\r\n                        if (data) {\r\n                            $scope.bindUrl = data.url;\r\n                            $scope.bindId = data.imgId;\r\n                        } else {\r\n                            layer.tips('图片上传失败！', '#' + eid, {\r\n                                tips: [1, '#d9534f']\r\n                            });\r\n                        }\r\n                    });\r\n            };\r\n            //操作\r\n            iElm\r\n                .find('input').on('change', function () {\r\n                    var files = this.files;\r\n                    if (!files[0]) {\r\n                        $scope.state.upAjaxing = false;\r\n                        return;\r\n                    }\r\n                    //状态检测\r\n                    if (!_setting.get('globUploadImg').url) {\r\n                        layer.alert('未检测到上传接口地址！<br>请配置 “全局上传接口” ');\r\n                        return;\r\n                    }\r\n                    if (iAttrs.imgSize) {\r\n                        if (!/^\\d{1,4}[,-_\\|xX×]\\d{1,4}$/.test(iAttrs.imgSize)) {\r\n                            layer.alert('图片尺寸限制配置不合法！<br>格式例如：300-200');\r\n                            return\r\n                        }\r\n                    }\r\n                    //显示加载中图标\r\n                    $scope.state.upAjaxing = true;\r\n                    if (!$scope.$$phase && !$scope.$root.$$phase) {\r\n                        $scope.$apply();\r\n                    }\r\n                    //读取文件\r\n                    var reader = new FileReader();\r\n                    reader.onload = function (e) {\r\n                        var img = new Image();\r\n                        img.onload = function () {\r\n                            img.onload = null;\r\n                            if (iAttrs.imgSize) {\r\n                                var matchs = iAttrs.imgSize.match(/^(\\d{1,4})[,-_\\|xX×](\\d{1,4})$/);\r\n                                if (img.width != matchs[1] || img.height != matchs[2]) {\r\n                                    var msg = '您选择的图片尺寸为 ' + img.width + ' × ' + img.height +\r\n                                        '，与此处上传要求的尺寸 <b class=\"text-danger\">' +\r\n                                        matchs[1] + ' × ' + matchs[2] + '</b> 不匹配！' +\r\n                                        '是否仍然要坚持继续上传？';\r\n                                    layer.confirm(msg, {icon: 0, title: '尺寸不匹配!'}, function (index) {\r\n                                        layer.close(index);\r\n                                        upload(img);\r\n                                    });\r\n                                } else {\r\n                                    upload(img);\r\n                                }\r\n                            } else {\r\n                                console.log(4);\r\n                                upload(img);\r\n                            }\r\n                        };\r\n                        img.src = e.target.result;\r\n                    };\r\n                    reader.readAsDataURL(files[0]);\r\n                })\r\n                .end()\r\n                .on('click', 'img', function () {\r\n                    var $this = $(this);\r\n                    var $win = $(window);\r\n                    var widthW = parseInt($win.width() * 0.8);\r\n                    widthW = (widthW % 2 == 0) ? widthW : widthW + 1;\r\n                    var heightW = parseInt($win.height() * 0.8);\r\n                    heightW = (heightW % 2 == 0) ? heightW : heightW + 1;\r\n                    var width = this.naturalWidth;\r\n                    var height = this.naturalHeight;\r\n                    var size = [width, height];\r\n                    //图片宽高比比窗口宽，按宽度计算\r\n                    if (width / height >= widthW / heightW) {\r\n                        if (width > widthW) {\r\n                            size[0] = parseInt(widthW);\r\n                            size[1] = parseInt(height / width * widthW);\r\n                        }\r\n                    }\r\n                    //图片宽高比比窗口高，按高度计算\r\n                    else {\r\n                        if (height > heightW) {\r\n                            size[0] = parseInt(width / height * heightW);\r\n                            size[1] = parseInt(heightW);\r\n                        }\r\n                    }\r\n                    //打开弹窗\r\n                    layer.open({\r\n                        type: 1,\r\n                        shade: 0.3,\r\n                        shadeClose: true,\r\n                        title: false,\r\n                        closeBtn: 2,\r\n                        move: '.layui-layer-content',\r\n                        skin: 'bm-upload-img-super',\r\n                        content: '<img src=\"' + $this.attr('src') + '\"/>',\r\n                        area: [size[0] + 'px', size[1] + 'px']\r\n                    });\r\n                });\r\n        }\r\n    }\r\n});","backman.directive('form', function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        scope: false,\r\n        restrict: 'E',\r\n        priority: 10,\r\n        link: function ($scope, iElm, iAttrs) {\r\n            var fName = '';\r\n            if (iElm.attr('id')) {\r\n                fName = iElm.attr('id');\r\n            } else {\r\n                fName = 'form' + (Date.now() % 1e7) + parseInt(Math.random() * 1e3);\r\n                iElm.attr('id', fName);\r\n            }\r\n            if (!$scope.$forms) {\r\n                $scope.$forms = {};\r\n            }\r\n            $scope.$forms[fName] = {};\r\n        }\r\n    }\r\n});\r\n\r\nbackman.directive('bmVerify', function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        scope: {\r\n            bindVerify: '='\r\n        },\r\n        restrict: 'A',\r\n        link: function ($scope, iElm, iAttrs) {\r\n            if (!iAttrs.bindVerify) {\r\n                return;\r\n            }\r\n            if (!iAttrs.verifyItem || iAttrs.verifyItem == '{}') {\r\n                return;\r\n            }\r\n            var _validations = null;\r\n            if (iAttrs.verifyItem == 'require') {\r\n                _validations = {\r\n                    require: true\r\n                };\r\n            } else {\r\n                _validations = JSON.parse(iAttrs.verifyItem);\r\n            }\r\n            var _messages = JSON.parse(iAttrs.verifyMsg || '{}');\r\n            var _dirtyState = false;\r\n            var $curForm = iElm.closest('form');\r\n            var fName = ($curForm.length > 0) ? $curForm.attr('id') : '';\r\n            //变化\r\n            $scope.$watch('bindVerify', function (newVal, oldVal) {\r\n                //脏检查\r\n                if (!_dirtyState && newVal) {\r\n                    _dirtyState = true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n});\r\n\r\nbackman.directive('bmVerifyControl', function ($timeout) {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        scope: false,\r\n        restrict: 'A',\r\n        link: function ($scope, iElm, iAttrs) {\r\n            //等待其他指令完成\r\n            $timeout(function () {\r\n                var fName = '';\r\n                if (iAttrs.bmVerifyControl != '') {\r\n                    fName = iAttrs.bmVerifyControl;\r\n                } else {\r\n                    fName = iElm.closest('form').attr('id');\r\n                }\r\n                $scope.$watch('$forms.' + fName, function (newVal, oldVal) {\r\n                });\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n});"],"sourceRoot":"build/backman/"}