{"version":3,"sources":["config.js","address.js","request.js","setting.js","tools.js","validate.js","framework.js","navigation.js","datepick.js","distpicker.js","editor.js","select2.js","uploadImg.js","verify.js"],"names":["backman","angular","module","config","$httpProvider","$urlRouterProvider","$controllerProvider","$compileProvider","$filterProvider","$provide","defaults","headers","put","post","get","X-Requested-With","transformRequest","data","param","obj","name","value","fullSubName","subName","subValue","innerObj","i","query","hasOwnProperty","Array","length","Object","undefined","encodeURIComponent","substr","isObject","String","aHrefSanitizationWhitelist","run","$rootScope","$state","$stateParams","dependences","app","concat","register","controller","directive","filter","factory","service","$http","$q","_tools","_setting","tree","deferred2","defer","StorageKey","tempTree","localStorage","getItem","JSON","parse","resolve","then","state","code","list","transKeyName","parentId","children","push","j","regionId","k","setItem","stringify","err","getTree","deferred","promise","getProvinces","this","getCities","provinceId","getDistricts","cityId","getRegionIdData","arr","result","len","regionName","success","noVerify","layer","alert","icon","title","closeBtn","setTimeout","window","location","href","__state","str","msg","error","status","statusText","_responePreHandler","url","postData","globAjaxParams","extend","method","getData","params","_data","base","protocol","host","path","pathname","split","navListUrl","loginUrl","logoutUrl","globUploadImg","fileKeyName","parameters","userInforUrl","kindUploadImgUrl","key","set","val","$","type","constant","urlData","getUrlParam","l","a","json","toCamel","str2","indexOf","words","toUpperCase","join","toUnderline","test","replace","$1","toLowerCase","transform","json2","p","parseInt","loadJs","jsList","$script","$apply","isMobile","rgx","trim","isRequired","isMatchLength","isLengthInRange","isInRange","isIdCard","isTheSame","val1","val2","isCorrectPassword","$scope","_httpGet","sidebarOpen","act","toggleSidebar","getNavData","cb","cberr","apiAddress","item1","navList","hash","item2","renderNavigation","sort","sortNavigation","item","navData","order","scope","bindDate","restrict","link","iElm","iAttrs","format","dateFormat","timePick","eid","id","Date","now","Math","random","attr","addClass","on","$this","dispatchEvent","MouseEvent","bubbles","cancelable","view","one","$$phase","$root","laydate","elem","istime","event","choose","dates","initW","$watch","newVal","oldVal","region","selectedPlace","transclude","template","iElement","disabledSelect","find","_chinaAddress","provinces","provinceCode","cities","blocks","cityCode","blockCode","provinceName","cityName","blockName","bindContent","editor","KindEditor","create","items","width","height","resizeMode","allowFileManager","uploadJson","afterChange","html","parent","hasClass","removeClass","end","next","slideUp","slideDown","navInitHandler","newValue","oldValue","each","$parent1","show","$parent2","$timeout","bindList","bindSearch","bindData","ctrl","doc","document","input","ul","click","e","hideUl","hide","off","isUlShow","css","filterFn","searchin","forEach","v","bindListCopy","filtoutData","isShowCheckbox","checkedAll","toggleSelectedItem","it","idx","checked","splice","doClick","doCheckAll","allItems","dataPreHandler","dt","copy","timeObj","cancel","search","_httpPost","bindId","bindUrl","upAjaxing","delImg","confirm","index","close","upload","img","opt","sendDate","src","imgId","files","imgSize","reader","FileReader","onload","Image","matchs","match","target","readAsDataURL","$win","widthW","heightW","naturalWidth","naturalHeight","size","open","shade","shadeClose","move","skin","content","area","focus","priority","fName","$forms","bindVerify","verifyItem","validations","require","_dirtyState","verifyMsg","$curForm","closest","bmVerifyControl","console","log"],"mappings":"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","file":"backman.min.js","sourcesContent":["var backman = angular.module('backman', ['ui.router']);\r\n\r\nbackman.config(function ($httpProvider, $urlRouterProvider, $controllerProvider, $compileProvider, $filterProvider, $provide) {\r\n\r\n    'use strict';\r\n\r\n    // 修正angularPost数据payload模式为formData模式\r\n    $httpProvider.defaults.headers.put['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    $httpProvider.defaults.headers.post['X-Requested-With'] = 'XMLHttpRequest';\r\n    $httpProvider.defaults.headers.get = {'X-Requested-With': 'XMLHttpRequest'};\r\n\r\n    // Override $http service's default transformRequest\r\n    $httpProvider.defaults.transformRequest = [function (data) {\r\n        /**\r\n         * The workhorse; converts an object to x-www-form-urlencoded serialization.\r\n         * @param {Object} obj\r\n         * @return {String}\r\n         */\r\n        var param = function (obj) {\r\n            var query = '';\r\n            var name, value, fullSubName, subName, subValue, innerObj, i;\r\n            for (name in obj) {\r\n                if (obj.hasOwnProperty(name)) {\r\n                    value = obj[name];\r\n                    if (value instanceof Array) {\r\n                        for (i = 0; i < value.length; ++i) {\r\n                            subValue = value[i];\r\n                            fullSubName = name + '[' + i + ']';\r\n                            innerObj = {};\r\n                            innerObj[fullSubName] = subValue;\r\n                            query += param(innerObj) + '&';\r\n                        }\r\n                    } else if (value instanceof Object) {\r\n                        for (subName in value) {\r\n                            if (value.hasOwnProperty(subName)) {\r\n                                subValue = value[subName];\r\n                                /* fullSubName = name + '[' + subName + ']'; //for node */\r\n                                fullSubName = name + '.' + subName;\r\n                                innerObj = {};\r\n                                innerObj[fullSubName] = subValue;\r\n                                query += param(innerObj) + '&';\r\n                            }\r\n                        }\r\n                    } else if (value !== undefined && value !== null) {\r\n                        query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';\r\n                    }\r\n                }\r\n            }\r\n            return query.length ? query.substr(0, query.length - 1) : query;\r\n        };\r\n        return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data;\r\n    }];\r\n\r\n    //增加angular自动过滤特殊url白名单\r\n    $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|ftp|mailto|tel|file|sms|javascript):/);\r\n\r\n});\r\n\r\n//路由转接\r\nbackman.run(function ($rootScope, $state, $stateParams) {\r\n\r\n    'use strict';\r\n\r\n    $rootScope.$state = $state;\r\n    $rootScope.$stateParams = $stateParams;\r\n\r\n});\r\n\r\n//backman创建模块\r\nbackman.module = function (name, dependences) {\r\n\r\n    'use strict';\r\n\r\n    var app = angular.module(name, ['backman'].concat(dependences));\r\n    app.config(function($controllerProvider, $compileProvider, $filterProvider, $provide){\r\n        //异步controller注册器\r\n        app.register = {\r\n            controller: $controllerProvider.register,\r\n            directive: $compileProvider.directive,\r\n            filter: $filterProvider.register,\r\n            factory: $provide.factory,\r\n            service: $provide.service\r\n        };\r\n    });\r\n    return app;\r\n\r\n};\r\n\r\n\r\n\r\n","// 服务：地址tree全局缓存服务\r\nbackman.factory('_chinaAddress', function ($http, $q, _tools, _setting) {\r\n\r\n    'use strict';\r\n\r\n    var tree = null;\r\n    var deferred2 = $q.defer();\r\n\r\n    var StorageKey = 'AREA_TREE';\r\n\r\n    var tempTree = localStorage.getItem(StorageKey);\r\n    tempTree = tempTree?JSON.parse(tempTree) : [];\r\n\r\n    if(tempTree && tempTree.length) {\r\n        tree = tempTree;\r\n        deferred2.resolve(tree);\r\n    }else {\r\n        // 当前修改为请求远程文件的方式来获取区域信息\r\n        $http.get('../_data/region.json').then(function (data) {\r\n            if (data.data.state.code == 10200) {\r\n                tree = [];\r\n                var list = _tools.transKeyName('camel', data.data.data);\r\n                //匹配依赖依据：\r\n                //所有地址regionId存在从小到大排列的规律，且parentId必定比自身regionId小，所以parent元素必定先于自身已经被创建\r\n                for (var i = 0; i < list.length; i++) {\r\n                    //省级\r\n                    if (list[i].parentId == '') {\r\n                        list[i].children = [];\r\n                        tree.push(list[i]);\r\n                    } else {\r\n                        //市级\r\n                        for (var j = 0; j < tree.length; j++) {\r\n                            if (tree[j].regionId == list[i].parentId) {\r\n                                list[i].children = [];\r\n                                tree[j].children.push(list[i]);\r\n                                break;\r\n                            } else {\r\n                                //区级\r\n                                for (var k = 0; k < tree[j].children.length; k++) {\r\n                                    if (tree[j].children[k].regionId == list[i].parentId) {\r\n                                        tree[j].children[k].children.push(list[i]);\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                tree = [];\r\n            }\r\n            localStorage.setItem(StorageKey, JSON.stringify(tree));\r\n            deferred2.resolve(tree);\r\n        }, function (err) {\r\n            tree = [];\r\n            deferred2.resolve(tree);\r\n        });\r\n    }\r\n\r\n\r\n    return {\r\n        getTree: function () {\r\n            if (tree) {\r\n                var deferred = $q.defer();\r\n                deferred.resolve(tree);\r\n                return deferred.promise;\r\n            } else {\r\n                return deferred2.promise;\r\n            }\r\n        },\r\n        getProvinces: function(){\r\n            return this.getTree();\r\n        },\r\n        getCities: function(provinceId){\r\n            return this.getProvinces().then(function(data){\r\n                for (var i = 0; i < data.length; i++) {\r\n                    if (data[i].regionId == provinceId) {\r\n                        return data[i].children;\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        getDistricts: function(provinceId, cityId){\r\n            return this.getCities(provinceId).then(function(data){\r\n                for (var i = 0; i < data.length; i++) {\r\n                    if (data[i].regionId == cityId) {\r\n                        return data[i].children;\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        /**\r\n         * 获取对应的区域id的数据\r\n         * @param  {String} type     'provinces','cities','blocks'\r\n         * @param  {String} regionId 区域id\r\n         * @return {Object}          区域id对应的对象\r\n         */\r\n        getRegionIdData: function(arr, regionId){\r\n            var result = '';\r\n            if (arr) {\r\n                for (var i = 0, len = arr.length; i < len; i++) {\r\n                    if (arr[i].regionId == regionId) {\r\n                        result = arr[i].regionName;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n});\r\n","// 服务：请求预处理\r\nbackman.factory('_responePreHandler', function (_tools, _setting) {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        //正常通行\r\n        success: function (success, config) {\r\n            //需要重新登录\r\n            if (success.data.state.code == 20001) {\r\n                if (config && config.noVerify == true) {\r\n                    return null;\r\n                }\r\n                layer.alert('您的登录已失效，即将跳转登录页...', {\r\n                        icon: 0,\r\n                        title: false,\r\n                        closeBtn: 0\r\n                    }, function () {\r\n                    }\r\n                );\r\n                setTimeout(function () {\r\n                    window.location.href = _setting.get('loginUrl');\r\n                }, 3000);\r\n                return null;\r\n            }\r\n            //正常code：10200\r\n            if (success.data.state.code == 10200) {\r\n                var data = success.data.data ? _tools.transKeyName('camel', success.data.data) : {};\r\n                data.__state = _tools.transKeyName('camel', success.data.state);\r\n                return data;\r\n            }\r\n            //正常code：10205\r\n            else if (success.data.state.code == 10205) {\r\n                return {\r\n                    __state: _tools.transKeyName('camel', success.data.state)\r\n                };\r\n            }\r\n            //报错code\r\n            else {\r\n                var str = '错误：code ' + success.data.state.code + '<br>' + (success.data.state && success.data.state.msg);\r\n                layer.alert(str, {\r\n                    icon: 2,\r\n                    title: '通讯内容有误！'\r\n                });\r\n                return null;\r\n            }\r\n        },\r\n        //http级报错\r\n        error: function (err) {\r\n            layer.alert('错误：status ' + err.status + ' ' + err.statusText, {\r\n                icon: 2,\r\n                title: '建立通讯失败！'\r\n            });\r\n            return null;\r\n        }\r\n    };\r\n\r\n});\r\n\r\nbackman.factory('_httpPost', function ($http, _tools, _responePreHandler, _setting) {\r\n\r\n    'use strict';\r\n\r\n    return function (url, postData, config) {\r\n        if (!config || !config.globAjaxParams) {\r\n            angular.extend(postData, _setting.globAjaxParams);\r\n        }\r\n        postData = _tools.transKeyName('underline', postData);\r\n        return $http({\r\n            method: 'POST',\r\n            url: url,\r\n            data: postData\r\n        }).then(function (success) {\r\n                return _responePreHandler.success(success, config);\r\n            }, function (err) {\r\n                return _responePreHandler.error(err);\r\n            }\r\n        );\r\n    };\r\n\r\n});\r\n\r\nbackman.factory('_httpGet', function ($http, _tools, _responePreHandler, _setting) {\r\n\r\n    'use strict';\r\n\r\n    return function (url, getData, config) {\r\n        if (!config || !config.globAjaxParams) {\r\n            angular.extend(getData, _setting.globAjaxParams);\r\n        }\r\n        getData = _tools.transKeyName('underline', getData);\r\n        return $http({\r\n            method: 'GET',\r\n            url: url,\r\n            params: getData\r\n        }).then(function (success) {\r\n            return _responePreHandler.success(success, config);\r\n        }, function (err) {\r\n            return _responePreHandler.error(err);\r\n        });\r\n    };\r\n\r\n});","backman.factory('_setting', function ($rootScope) {\r\n\r\n    'use strict';\r\n\r\n    var _data = {\r\n        base: location.protocol + '//' + location.host,\r\n        path: '/' + location.pathname.split('/index.html')[0],\r\n        globAjaxParams: {}\r\n    };\r\n    _data.path = _data.path == '/' ? '' : _data.path;\r\n\r\n    //左侧导航栏接口地址\r\n    _data.navListUrl = _data.base + _data.path + '/_data/navList.json';\r\n\r\n    //登录页地址\r\n    _data.loginUrl = _data.base + _data.path + '/login.html';\r\n\r\n    //退出登录接口地址\r\n    _data.logoutUrl = _data.base + _data.path + '';\r\n\r\n    //全局图片上传设置\r\n    _data.globUploadImg = {\r\n        //接口地址\r\n        url: '/api/upload-base64-image',\r\n        //base64键名\r\n        fileKeyName: 'base64File',\r\n        //同时发送的其他参数\r\n        parameters: {}\r\n    };\r\n\r\n    _data.userInforUrl = '/reseller-admin/user/user-info';\r\n\r\n    //富文本编辑器图片上传接口\r\n    _data.kindUploadImgUrl = '/api/upload-image';\r\n\r\n    return {\r\n        get: function (key) {\r\n            return _data[key];\r\n        },\r\n        set: function (key, val) {\r\n            if (key == 'globAjaxParams') {\r\n                if ($.type(val) == 'object') {\r\n                    angular.extend(_data.globAjaxParams, val);\r\n                }\r\n            } else if (key == 'globUploadImg') {\r\n                if ($.type(val) == 'object') {\r\n                    angular.extend(_data.globUploadImg, val);\r\n                }\r\n            } else {\r\n                _data[key] = val;\r\n            }\r\n        }\r\n    };\r\n\r\n});","\r\nbackman.constant('_tools', (function () {\r\n\r\n    'use strict';\r\n\r\n    //获取url参数\r\n    var urlData = null;\r\n    var getUrlParam = function (name) {\r\n        if (!urlData) {\r\n            var url = window.location.href;\r\n            urlData = {};\r\n            var arr = url.split(\"?\");\r\n            if (arr.length > 1) {\r\n                arr = arr[1].split(\"&\");\r\n                for (var i = 0, l = arr.length; i < l; i++) {\r\n                    var a = arr[i].split(\"=\");\r\n                    urlData[a[0]] = a[1];\r\n                }\r\n                urlData = transKeyName('camel', urlData);\r\n            }\r\n        }\r\n        return urlData[name];\r\n    };\r\n\r\n    //峰驼与下划线命名模式转换\r\n    var transKeyName = function (type, json) {\r\n        //下划线字符串转小峰驼\r\n        var toCamel = function (str) {\r\n            var str2 = '';\r\n            if (str.indexOf('_') < 0) {\r\n                str2 = str;\r\n            } else {\r\n                var words = str.split('_');\r\n                for (var i = 1; i < words.length; i++) {\r\n                    words[i] = words[i].substr(0, 1).toUpperCase() + words[i].substr(1);\r\n                }\r\n                str2 = words.join('');\r\n            }\r\n            return str2;\r\n        };\r\n        //小峰驼字符串转下划线\r\n        var toUnderline = function (str) {\r\n            var str2 = '';\r\n            if ((/[A-Z]/).test(str)) {\r\n                str2 = str.replace(/([A-Z])/g, function ($1) {\r\n                    return '_' + $1.toLowerCase();\r\n                });\r\n            } else {\r\n                str2 = str;\r\n            }\r\n            return str2;\r\n        };\r\n        var transform = function (json, json2) {\r\n            for (var p in json) {\r\n                if (json.hasOwnProperty(p)) {\r\n                    var key;\r\n                    //字符串进行键名转换\r\n                    if (!/^\\d+$/.test(p)) {\r\n                        if (type == 'camel') {\r\n                            key = toCamel(p);\r\n                        } else if (type == 'underline') {\r\n                            key = toUnderline(p);\r\n                        }\r\n                    }\r\n                    //数值直接传递\r\n                    else {\r\n                        key = parseInt(p);\r\n                    }\r\n                    //属性为对象时，递归转换\r\n                    if (json[p] instanceof Object) {\r\n                        json2[key] = transform(json[p], $.type(json[p]) == 'array' ? [] : {});\r\n                    }\r\n                    //属性非对象，为字符串但内容符合json格式，递归转换\r\n                    else if ($.type(json[p]) == 'string' && /^[\\{\\[]+(\"([a-zA-Z][a-zA-Z0-9\\-_]*?)\"\\:(.+?))+[\\}\\]]+$/.test(json[p])) {\r\n                        json2[key] = JSON.parse(json[p]);\r\n                        json2[key] = transform(json2[key], $.type(json2[key]) == 'array' ? [] : {});\r\n                        json2[key] = JSON.stringify(json2[key]);\r\n                    }\r\n                    //属性非对象，非json字符串，直接传递\r\n                    else {\r\n                        json2[key] = json[p];\r\n                    }\r\n                }\r\n            }\r\n            return json2;\r\n        };\r\n        return transform(json, $.type(json) == 'array' ? [] : {});\r\n    };\r\n\r\n    var loadJs = function (jsList) {\r\n        return function ($q, $rootScope) {\r\n            var deferred = $q.defer();\r\n            $script(jsList, function () {\r\n                $rootScope.$apply(function () {\r\n                    deferred.resolve();\r\n                });\r\n            });\r\n            return deferred.promise;\r\n        };\r\n    };\r\n\r\n    return {\r\n        getUrlParam: getUrlParam,\r\n        transKeyName: transKeyName,\r\n        loadJs: loadJs\r\n    };\r\n\r\n})());","backman.factory('_validate', function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        isMobile: function (val) {\r\n            var rgx = /^(13[0-9]|14[0-9]|15[0-9]|18[0-9])\\d{8}$/i;\r\n            return rgx.test($.trim(val));\r\n        },\r\n        isRequired: function (val) {\r\n            return $.trim(val) ? true : false;\r\n        },\r\n        isMatchLength: function (val, len) {\r\n            return (($.trim(val)).length == len);\r\n        },\r\n        isLengthInRange: function (val, arr) {\r\n            var len = ($.trim(val)).length;\r\n            return (len >= arr[0] && len <= arr[1]);\r\n        },\r\n        isInRange: function (val, arr) {\r\n            return (val >= arr[0] && val <= arr[1]);\r\n        },\r\n        isIdCard: function (val) {\r\n            var rgx = /^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{4}$/;\r\n            return rgx.test($.trim(val));\r\n        },\r\n        isTheSame: function (val1, val2) {\r\n            return (val1 == val2);\r\n        },\r\n        // 验证密码\r\n        isCorrectPassword: function (val) {\r\n            // 只包含数字或字母\r\n            var rgx = /^(?!\\d+$)(?![a-z]+$).+$/i;\r\n            return rgx.test($.trim(val));\r\n        }\r\n    };\r\n});","backman.controller('backmanFramework', function ($scope, _setting, _httpGet) {\r\n\r\n    'use strict';\r\n\r\n    //移动端导航栏显示隐藏\r\n    $scope.sidebarOpen = false;\r\n\r\n    $scope.act = {\r\n        //导航栏移动端显示隐藏\r\n        toggleSidebar: function () {\r\n            $scope.sidebarOpen = !$scope.sidebarOpen;\r\n        }\r\n    };\r\n\r\n    _httpGet(_setting.get('userInforUrl'),{});\r\n\r\n});","backman.directive('bmSidebar', function () {\r\n    return {\r\n        scope: false,\r\n        restrict: 'A',\r\n        link: function ($scope, iElm, iAttrs) {\r\n            iElm.on('click', '.treeview-title', function () {\r\n                var $this = $(this);\r\n                if ($this.parent().hasClass('active')) {\r\n                    $this.parent().removeClass('active').end()\r\n                        .next('ul.treeview-menu').slideUp('fast');\r\n                } else {\r\n                    $this.parent().addClass('active').end()\r\n                        .next('ul.treeview-menu').slideDown('fast');\r\n                }\r\n            });\r\n            var navInitHandler = $scope.$watch('navData', function (newValue, oldValue) {\r\n                if (newValue) {\r\n                    navInitHandler();  //仅运行一次\r\n                    var hash = window.location.hash;\r\n                    setTimeout(function () {\r\n                        iElm.find('.treeview-link').each(function () {\r\n                            var $this = $(this);\r\n                            if ($this.attr('href') == hash) {\r\n                                var $parent1 = $this.parent().parent().show().parent().addClass('active');\r\n                                if ($parent1.hasClass('treeview')) {\r\n                                    var $parent2 = $parent1.parent().show().parent().addClass('active');\r\n                                    if ($parent2.hasClass('treeview')) {\r\n                                        $parent2.addClass('active');\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }, 0);\r\n                }\r\n            });\r\n        }\r\n    }\r\n});","backman.directive('bmDatepick', function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        scope: {\r\n            bindDate: '='\r\n        },\r\n        restrict: 'A',\r\n        link: function ($scope, iElm, iAttrs) {\r\n            var format = iAttrs.dateFormat || 'YYYY-MM-DD hh:mm:ss'; //日期格式\r\n            var timePick = /(hh|mm|ss)+/g.test(format); //是否开启时间选择\r\n            var eid = iAttrs.id || 'datepick' + (Date.now() % 1e7) + parseInt(Math.random() * 1e3);\r\n            iElm.attr('id', eid)\r\n                .attr('placeholder', format)\r\n                .addClass('laydate-icon')\r\n                .on('click', function () {\r\n                    var $this = $(this);\r\n                    if (!$this.attr('readonly')) {\r\n                        $this[0].dispatchEvent(new MouseEvent('dblclick', {\r\n                            bubbles: true,\r\n                            cancelable: true,\r\n                            view: window\r\n                        }))\r\n                    }\r\n                });\r\n            $('#' + eid).one('dblclick', function () {\r\n                var $this = $(this);\r\n                setTimeout(function(){\r\n                    $('#laydate_today').on('click', function () {\r\n                        $scope.bindDate = $this.val();\r\n                        if (!$scope.$$phase && !$scope.$root.$$phase) {\r\n                            $scope.$apply();\r\n                        }\r\n                    });\r\n                }, 0);\r\n            });\r\n            laydate({\r\n                elem: '#' + eid,\r\n                format: format,\r\n                istime: timePick,\r\n                event: 'dblclick',\r\n                choose: function (dates) {\r\n                    $scope.bindDate = dates;\r\n                    if (!$scope.$$phase && !$scope.$root.$$phase) {\r\n                        $scope.$apply();\r\n                    }\r\n                }\r\n            });\r\n            //初次数据\r\n            var initW = $scope.$watch('bindDate', function (newVal, oldVal) {\r\n                if (newVal) {\r\n                    initW();\r\n                    iElm.val(newVal);\r\n                }\r\n            });\r\n        }\r\n    }\r\n});","// 指令: 处理多级联动下拉菜单\r\n// disabled-select=\"1\" 设置该属性将不能设置区域\r\nbackman.directive('bmDistpicker', function() {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        restrict: 'A',\r\n        scope: {\r\n            region: '=region', // 与控制器的$scope.region绑定\r\n            selectedPlace: '=selectedplace' // 与控制器的$scope.selectedPlace (双向)绑定\r\n        },\r\n        replace: true,\r\n        transclude: false,\r\n        template: '<div class=\"distpicker\">' +\r\n                        '<div class=\"distpicker-content\" >' +\r\n                            '<select class=\"\" ng-options=\"province.regionId as province.regionName for province in region.provinces\" ng-model=\"selectedPlace.provinceCode\">' +\r\n                                '<option value=\"\" disabled>请选择省份</option>' +\r\n                            '</select>' +\r\n                            '<select class=\"\" ng-options=\"city.regionId as city.regionName for city in region.cities\" ng-model=\"selectedPlace.cityCode\">' +\r\n                                '<option value=\"\" disabled>请选择市</option>' +\r\n                            '</select>' +\r\n                            '<select class=\"\" ng-options=\"block.regionId as block.regionName for block in region.blocks\" ng-model=\"selectedPlace.blockCode\">' +\r\n                                '<option value=\"\" disabled>请选择区/县</option>' +\r\n                            '</select>' +\r\n                        '</div>' +\r\n                   '</div>',\r\n        link: function(scope, iElement, iAttrs) {\r\n            if (parseInt(iAttrs.disabledSelect, 10) == 1) {\r\n                iElement.find('.distpicker-content>select').attr('disabled', 'disabled');\r\n            }\r\n        },\r\n        controller: function($scope, _chinaAddress) {\r\n            // 获取一次菜单\r\n            _chinaAddress.getTree().then(function(data) {\r\n                $scope.region.provinces = data;\r\n            });\r\n\r\n            // 省的变化\r\n            $scope.$watch('selectedPlace.provinceCode', function(newVal, oldVal, scope) {\r\n\r\n                // 如果值改变\r\n                if (!!newVal) {\r\n\r\n                    // 设置显示的值 城市与区域\r\n                    _chinaAddress.getCities($scope.selectedPlace.provinceCode).then(function(data) {\r\n                        $scope.region.cities = data;\r\n                        $scope.region.blocks = [];\r\n                    });\r\n\r\n                    $scope.selectedPlace = {\r\n                        provinceCode: newVal, //省编号\r\n                        cityCode: '', //市编号\r\n                        blockCode: '', //区/县编号\r\n                        provinceName: _chinaAddress.getRegionIdData($scope.region.provinces,newVal), //省名\r\n                        cityName: '', //市名\r\n                        blockName: '', //区/县名\r\n                    };\r\n\r\n                }else{\r\n                    $scope.region.cities = [];\r\n                    $scope.region.blocks = [];\r\n                }\r\n            });\r\n\r\n            // 市的变化\r\n            $scope.$watch('selectedPlace.cityCode', function(newVal, oldVal, scope) {\r\n\r\n                // 如果值改变\r\n                if (!!newVal) {\r\n\r\n                    // 设置显示的值 区域\r\n                    _chinaAddress.getDistricts(\r\n                        $scope.selectedPlace.provinceCode,\r\n                        $scope.selectedPlace.cityCode\r\n                    ).then(function(data) {\r\n                        $scope.selectedPlace.cityCode = newVal;\r\n                        $scope.region.blocks = data;\r\n                    });\r\n                    // $scope.selectedPlace.blockCode = '';\r\n                    scope.selectedPlace = {\r\n                        provinceCode: $scope.selectedPlace.provinceCode, //省编号\r\n                        cityCode: newVal, //市编号\r\n                        blockCode: '', //区/县编号\r\n                        provinceName: $scope.selectedPlace.provinceName, //省名\r\n                        cityName:  _chinaAddress.getRegionIdData($scope.region.cities,newVal), //市名\r\n                        blockName: '', //区/县名\r\n                    };\r\n                }else{\r\n                    $scope.region.blocks = [];\r\n                }\r\n            });\r\n\r\n            // 区的变化\r\n            $scope.$watch('selectedPlace.blockCode', function(newVal, oldVal, scope) {\r\n                if (newVal !== oldVal) {\r\n                    $scope.selectedPlace.blockCode = newVal;\r\n                    $scope.selectedPlace = {\r\n                        provinceCode: $scope.selectedPlace.provinceCode, //省编号\r\n                        cityCode: $scope.selectedPlace.cityCode, //市编号\r\n                        blockCode: newVal, //区/县编号\r\n                        provinceName: $scope.selectedPlace.provinceName, //省名\r\n                        cityName:  $scope.selectedPlace.cityName, //市名\r\n                        blockName: _chinaAddress.getRegionIdData($scope.region.blocks,newVal), //区/县名\r\n                    };\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    };\r\n});\r\n","backman.directive('bmEditor', function (_setting) {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        scope: {\r\n            bindContent: '='\r\n        },\r\n        restrict: 'A',\r\n        link: function ($scope, iElm, iAttrs) {\r\n            var eid = iAttrs.id || 'editor' + (Date.now() % 1e7) + parseInt(Math.random() * 1e3);\r\n            iElm.attr('id', eid);\r\n            var editor = KindEditor.create('#' + eid, {\r\n                items: [\r\n                    'source', '|',\r\n                    'undo', 'redo', '|',\r\n                    'template', 'code', '|',\r\n                    'cut', 'copy', 'paste', 'plainpaste', 'wordpaste', '|',\r\n                    'justifyleft', 'justifycenter', 'justifyright', 'justifyfull', 'insertorderedlist',\r\n                    'insertunorderedlist', 'indent', 'outdent', 'subscript', 'superscript', 'clearhtml',\r\n                    'quickformat', '|', 'selectall', 'fullscreen', '/',\r\n                    'formatblock', 'fontname', 'fontsize', '|',\r\n                    'forecolor', 'hilitecolor', 'bold', 'italic', 'underline', 'strikethrough', 'lineheight',\r\n                    'removeformat', '|',\r\n                    'image', 'multiimage', 'table', 'hr', 'emoticons', 'baidumap', 'pagebreak', 'anchor', 'link', 'unlink', '|',\r\n                    'preview', 'print', 'about'\r\n                ],\r\n                width: '100%',\r\n                height: '270px',\r\n                resizeMode: 1,\r\n                allowFileManager: false,\r\n                //imageUploadJson: _setting.get('kindUploadImgUrl') || '',\r\n                uploadJson: _setting.get('kindUploadImgUrl') || '',\r\n                afterChange: function () {\r\n                    if (editor) {\r\n                        $scope.bindContent = editor.html();\r\n                        if (!$scope.$$phase && !$scope.$root.$$phase) {\r\n                            $scope.$apply();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            //初次数据\r\n            var initW = $scope.$watch('bindContent', function (newVal, oldVal) {\r\n                if (newVal) {\r\n                    initW();\r\n                    editor.html(newVal + '');\r\n                }\r\n            });\r\n        }\r\n    }\r\n});","/*\r\n * author:tank\r\n * date:2016-12-12\r\n * desc:component select2\r\n */\r\nbackman.directive('bmSelect2', function($timeout){\r\n    'use strict';\r\n    \r\n    return {\r\n        scope: {\r\n            bindList:'=', // 列表中的数据集\r\n            bindSearch:'@', // 搜索哪个字段\r\n            bindData:'=' // 统一返回数组\r\n        },\r\n        restrict: 'A',\r\n        template: '<div class=\"bm-select2-box\" ng-click=\"$event.stopPropagation();\">' +                       \r\n                        '<input type=\"text\" class=\"bm-select2-input\" ng-model=\"name\">' +\r\n                        '<ul class=\"bm-select2-list list-unstyled\">' +\r\n                            '<li ng-if=\"isShowCheckbox\">' +\r\n                                '<label style=\"margin: 0;\">'+\r\n                                    '<input type=\"checkbox\" ng-checked=\"checkedAll\" ng-click=\"act.doCheckAll(filtoutData);\"/>' +\r\n                                    '<span>全选</span>' +\r\n                                '</label>' +\r\n                            '</li>' +\r\n                            '<li ng-repeat=\"item in filtoutData\">' +\r\n                                '<label style=\"margin: 0;\" ng-if=\"!isShowCheckbox\" ng-click=\"act.doClick(item);\" ng-bind=\"item[bindSearch]\"></label>' +\r\n                                '<label style=\"margin: 0;\" ng-if=\"isShowCheckbox\">'+\r\n                                    '<input type=\"checkbox\" ng-checked=\"item.checked\" ng-click=\"act.doClick(item);\"/>' +\r\n                                    '<span ng-bind=\"item[bindSearch]\"></span>' +\r\n                                '</label>' +\r\n                            '</li>' +\r\n                        '</ul> ' +               \r\n                    '</div>',\r\n        replace: true,\r\n        link: function($scope, iElm, iAttrs, ctrl) {\r\n            var doc = $(document),\r\n                input = iElm.children('input'),\r\n                ul = iElm.children('ul');\r\n\r\n            // 控件行为\r\n            input.click(function(e) {\r\n                var hideUl = function() {\r\n                    ul.hide();\r\n                    doc.off('click', hideUl);\r\n                };\r\n                var isUlShow = ul.css('display') != 'none';\r\n                if(isUlShow) {\r\n                    ul.hide();\r\n                    doc.off('click', hideUl);\r\n                }else {\r\n                    ul.show();\r\n                    doc.on('click', hideUl);\r\n                }\r\n            });\r\n\r\n            // 筛选用函数\r\n            var filterFn = function(key, data) {\r\n                var searchin = $scope.bindSearch;\r\n                var result = [];\r\n                if(key && data && data.length) {\r\n                    angular.forEach(data, function(v, k, obj) {\r\n                        if(v[searchin].indexOf(key) >= 0) {\r\n                            result.push(v);\r\n                        }\r\n                    });\r\n                }\r\n                return result;\r\n            };\r\n\r\n            // 模板中用到的模型\r\n            $scope.bindListCopy = []; // 拷贝出来的数据源\r\n            $scope.filtoutData = []; // 过滤出来的数据(展示用)\r\n            $scope.name = ''; // input输入框的模型\r\n            $scope.isShowCheckbox = parseInt(iAttrs.isShowCheckbox, 10) === 1 ? true : false  ; // 是否显示复选框\r\n            $scope.checkedAll = false; // 是否全选\r\n            $scope.bindData = []; // 返回控制器的结果集\r\n\r\n            // arr就是结果集合$scope.bindData\r\n            var toggleSelectedItem = function(arr, it) {\r\n                var idx = arr.indexOf(it);\r\n                if(it.checked) {\r\n                    if(idx < 0) {\r\n                        arr.push(it);\r\n                    }\r\n                } else {\r\n                    if(idx >= 0) {\r\n                        arr.splice(idx, 1);\r\n                    }\r\n                }\r\n                return arr;\r\n            };\r\n\r\n            $scope.act = {\r\n                doClick:function(item) {\r\n                    if($scope.isShowCheckbox) { // 多选的情况\r\n                        item.checked = !item.checked;\r\n                        $scope.bindData = toggleSelectedItem($scope.bindData, item);\r\n                    } else { // 单选的情况\r\n                        $scope.name = item[$scope.bindSearch];\r\n                        $scope.bindData = [item];\r\n\r\n                        // 写这里貌似不太好\r\n                        ul.hide();\r\n                    }\r\n                },\r\n                doCheckAll:function(allItems) {\r\n                    if($scope.isShowCheckbox) { // 多选的情况\r\n                        $scope.checkedAll = !$scope.checkedAll;\r\n                        angular.forEach(allItems, function(v, k) {\r\n                            v.checked = $scope.checkedAll;\r\n                            toggleSelectedItem($scope.bindData, v);        \r\n                        });\r\n                    }\r\n                }\r\n            };\r\n\r\n            // 如果绑定的数据源改变了，则重新初始化一些值\r\n            $scope.$watch('bindList', function(newVal, oldVal) {\r\n                var dataPreHandler = function(dt) {\r\n                    if(dt && dt.length) {\r\n                        angular.forEach(dt, function(v, k) {\r\n                            v.checked = false;\r\n                        });\r\n                    }\r\n                    return dt;\r\n                };\r\n                if(newVal) {\r\n                    $scope.bindListCopy = dataPreHandler(angular.copy($scope.bindList));\r\n                    $scope.filtoutData = [].concat($scope.bindListCopy);\r\n                    $scope.name = '';\r\n                    $scope.bindData = [];\r\n                    if ($scope.isShowCheckbox) {\r\n                        $scope.checkedAll = false;\r\n                    }\r\n                }\r\n            });\r\n\r\n            // 函数节流，减少筛选的次数\r\n            var timeObj = null;\r\n            $scope.$watch('name', function(newVal, oldVal) {\r\n                if(timeObj){\r\n                    $timeout.cancel(timeObj);\r\n                }\r\n                timeObj = $timeout(function(){\r\n                    var search = $.trim(newVal)?$.trim(newVal):'';\r\n                    if(search) {\r\n                        $scope.filtoutData = filterFn(search ,$scope.bindListCopy);                    \r\n                    }else {\r\n                        $scope.filtoutData = [].concat($scope.bindListCopy);\r\n                    }\r\n                    $scope.checkedAll = false;\r\n\r\n                    timeObj = null;\r\n                }, 500);\r\n            });\r\n        }\r\n    };\r\n});","backman.directive('bmUploadImg', function (_setting, _httpPost) {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        scope: {\r\n            bindId: '=',\r\n            bindUrl: '='\r\n        },\r\n        restrict: 'A',\r\n        template: '<div class=\"bm-upload-img-bg img-thumbnail\">' +\r\n        '  <i class=\"fa fa-image\"></i><i class=\"fa fa-plus\"></i></div>' +\r\n        '<div class=\"bm-upload-img-input\"><input type=\"file\" /></div>' +\r\n        '<div class=\"bm-upload-img-uping\" ng-if=\"state.upAjaxing\" title=\"上传中，请稍后...\">' +\r\n        '  <i class=\"fa fa-spinner\"></i></div>' +\r\n        '<div class=\"bm-upload-img-view img-thumbnail\" ng-if=\"bindUrl\" tabindex=\"-1\">' +\r\n        '  <span><img ng-src=\"{{bindUrl}}\" data-img-id=\"{{bindId}}\"/></span>' +\r\n        '  <i class=\"fa fa-times\" ng-click=\"act.delImg()\"></i>' +\r\n        '</div>',\r\n        link: function ($scope, iElm, iAttrs) {\r\n            var eid = iAttrs.id || 'uploadImg' + (Date.now() % 1e7) + parseInt(Math.random() * 1e3);\r\n            iElm.addClass('bm-upload-img').attr('id', eid);\r\n            $scope.state = {\r\n                upAjaxing: false  //显示上传中状态\r\n            };\r\n            //交互\r\n            $scope.act = {\r\n                delImg: function () {\r\n                    layer.confirm('<img class=\"bm-upload-img-del\" src=\"' + $scope.bindUrl + '\"/>',\r\n                        {title: '确认删除此图片？'}, function (index) {\r\n                            layer.close(index);\r\n                            $scope.bindId = $scope.bindUrl = '';\r\n                            if (!$scope.$$phase && !$scope.$root.$$phase) {\r\n                                $scope.$apply();\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n            };\r\n            //上传图片\r\n            var upload = function (img) {\r\n                var opt = _setting.get('globUploadImg');\r\n                var sendDate = opt.parameters;\r\n                sendDate[opt.fileKeyName] = img.src;\r\n                _httpPost(opt.url, sendDate)\r\n                    .then(function (data) {\r\n                        $scope.state.upAjaxing = false;\r\n                        if (data) {\r\n                            $scope.bindUrl = data.url;\r\n                            $scope.bindId = data.imgId;\r\n                        }\r\n                    });\r\n            };\r\n            //操作\r\n            iElm\r\n                .find('input').on('change', function () {\r\n                    var files = this.files;\r\n                    if (!files[0]) {\r\n                        $scope.state.upAjaxing = false;\r\n                        return;\r\n                    }\r\n                    //状态检测\r\n                    if (!_setting.get('globUploadImg').url) {\r\n                        layer.alert('未检测到上传接口地址！<br>请配置 “全局上传接口” ');\r\n                        return;\r\n                    }\r\n                    if (iAttrs.imgSize) {\r\n                        if (!/^\\d{1,4}[,-_\\|xX×]\\d{1,4}$/.test(iAttrs.imgSize)) {\r\n                            layer.alert('图片尺寸限制配置不合法！<br>格式例如：300-200');\r\n                            return\r\n                        }\r\n                    }\r\n                    //显示加载中图标\r\n                    $scope.state.upAjaxing = true;\r\n                    if (!$scope.$$phase && !$scope.$root.$$phase) {\r\n                        $scope.$apply();\r\n                    }\r\n                    //读取文件\r\n                    var reader = new FileReader();\r\n                    reader.onload = function (e) {\r\n                        var img = new Image();\r\n                        img.onload = function () {\r\n                            img.onload = null;\r\n                            if (iAttrs.imgSize) {\r\n                                var matchs = iAttrs.imgSize.match(/^(\\d{1,4})[,-_\\|xX×](\\d{1,4})$/);\r\n                                if (img.width != matchs[1] || img.height != matchs[2]) {\r\n                                    var msg = '您选择的图片尺寸为 ' + img.width + ' × ' + img.height +\r\n                                        '，与此处上传要求的尺寸 <b class=\"text-danger\">' +\r\n                                        matchs[1] + ' × ' + matchs[2] + '</b> 不匹配！' +\r\n                                        '是否仍然要坚持继续上传？';\r\n                                    layer.confirm(msg, {icon: 0, title: '尺寸不匹配!'}, function (index) {\r\n                                        layer.close(index);\r\n                                        upload(img);\r\n                                    }, function(){\r\n                                        $scope.state.upAjaxing = false;\r\n                                        if (!$scope.$$phase && !$scope.$root.$$phase) {\r\n                                            $scope.$apply();\r\n                                        }\r\n                                    });\r\n                                } else {\r\n                                    upload(img);\r\n                                }\r\n                            } else {\r\n                                upload(img);\r\n                            }\r\n                        };\r\n                        img.src = e.target.result;\r\n                    };\r\n                    reader.readAsDataURL(files[0]);\r\n                })\r\n                .end()\r\n                //点击图片放大显示\r\n                .on('click', 'img', function () {\r\n                    var $this = $(this);\r\n                    var $win = $(window);\r\n                    var widthW = parseInt($win.width() * 0.8);\r\n                    widthW = (widthW % 2 == 0) ? widthW : widthW + 1;\r\n                    var heightW = parseInt($win.height() * 0.8);\r\n                    heightW = (heightW % 2 == 0) ? heightW : heightW + 1;\r\n                    var width = this.naturalWidth;\r\n                    var height = this.naturalHeight;\r\n                    var size = [width, height];\r\n                    //图片宽高比比窗口宽，按宽度计算\r\n                    if (width / height >= widthW / heightW) {\r\n                        if (width > widthW) {\r\n                            size[0] = parseInt(widthW);\r\n                            size[1] = parseInt(height / width * widthW);\r\n                        }\r\n                    }\r\n                    //图片宽高比比窗口高，按高度计算\r\n                    else {\r\n                        if (height > heightW) {\r\n                            size[0] = parseInt(width / height * heightW);\r\n                            size[1] = parseInt(heightW);\r\n                        }\r\n                    }\r\n                    //打开弹窗\r\n                    layer.open({\r\n                        type: 1,\r\n                        shade: 0.3,\r\n                        shadeClose: true,\r\n                        title: false,\r\n                        closeBtn: 2,\r\n                        move: '.layui-layer-content',\r\n                        skin: 'bm-upload-img-super',\r\n                        content: '<span>' + $this[0].src + '</span><img src=\"' + $this.attr('src') + '\"/>',\r\n                        area: [size[0] + 'px', size[1] + 'px'],\r\n                        end: function() {\r\n                            $this.parent().parent().focus();\r\n                        }\r\n                    });\r\n                });\r\n        }\r\n    }\r\n});","backman.directive('form', function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        scope: false,\r\n        restrict: 'E',\r\n        priority: 10,\r\n        link: function ($scope, iElm, iAttrs) {\r\n            var fName = '';\r\n            if (iElm.attr('id')) {\r\n                fName = iElm.attr('id');\r\n            } else {\r\n                fName = 'form' + (Date.now() % 1e7) + parseInt(Math.random() * 1e3);\r\n                iElm.attr('id', fName);\r\n            }\r\n            if (!$scope.$forms) {\r\n                $scope.$forms = {};\r\n            }\r\n            $scope.$forms[fName] = {};\r\n        }\r\n    }\r\n});\r\n\r\nbackman.directive('bmVerify', function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        scope: {\r\n            bindVerify: '='\r\n        },\r\n        restrict: 'A',\r\n        link: function ($scope, iElm, iAttrs) {\r\n            if (!iAttrs.bindVerify) {\r\n                return;\r\n            }\r\n            if (!iAttrs.verifyItem || iAttrs.verifyItem == '{}') {\r\n                return;\r\n            }\r\n            var validations = null;\r\n            if (iAttrs.verifyItem == 'require') {\r\n                validations = {\r\n                    require: true\r\n                };\r\n            } else {\r\n                validations = JSON.parse(iAttrs.verifyItem.replace(/'/g, '\"'));\r\n            }\r\n            var messages = JSON.parse(iAttrs.verifyMsg ? iAttrs.verifyMsg.replace(/'/g, '\"') : '{}');\r\n            //当前指令脏值\r\n            var _dirtyState = false;\r\n            //所属表单\r\n            var $curForm = iElm.closest('form');\r\n            var fName = ($curForm.length > 0) ? $curForm.attr('id') : '';\r\n            //变化\r\n            $scope.$watch('bindVerify', function (newVal, oldVal) {\r\n                //脏检查\r\n                if (!_dirtyState && newVal) {\r\n                    _dirtyState = true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n});\r\n\r\nbackman.directive('bmVerifyControl', function ($timeout) {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        scope: false,\r\n        restrict: 'A',\r\n        link: function ($scope, iElm, iAttrs) {\r\n            //等待其他指令完成\r\n            $timeout(function () {\r\n                var fName = '';\r\n                if (iAttrs.bmVerifyControl != '') {\r\n                    fName = iAttrs.bmVerifyControl;\r\n                } else {\r\n                    fName = iElm.closest('form').attr('id');\r\n                }\r\n                $scope.$watch('$forms.' + fName, function (newVal, oldVal) {\r\n                    console.log(newVal);\r\n                });\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n});"],"sourceRoot":"build/backman/"}