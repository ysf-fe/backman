{"version":3,"sources":["config.js","request.js","setting.js","tools.js","validate.js"],"names":["backman","angular","module","config","$httpProvider","$urlRouterProvider","$controllerProvider","$compileProvider","$filterProvider","$provide","defaults","headers","put","post","get","X-Requested-With","transformRequest","data","param","obj","name","value","fullSubName","subName","subValue","innerObj","i","query","hasOwnProperty","Array","length","Object","undefined","encodeURIComponent","substr","isObject","String","aHrefSanitizationWhitelist","ysf","register","controller","directive","filter","factory","service","run","$rootScope","$state","$stateParams","_tools","success","state","code","noVerify","window","location","href","alert","msg","transKeyName","__state","error","err","$http","_responePreHandler","_setting","url","postData","ajaxParams","extend","method","then","getData","params","base","protocol","host","path","key","set","val","urlData","getUrlParam","arr","split","l","a","type","json","toCamel","str","str2","indexOf","words","toUpperCase","join","toUnderline","test","replace","$1","toLowerCase","transform","json2","p","loadJs","jsList","$q","deferred","defer","$script","$apply","resolve","promise","isMobile","rgx","$","trim","isRequired","isMatchLength","len","isLengthInRange","isInRange","isIdCard","isTheSame","val1","val2","isCorrectPassword"],"mappings":"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","file":"backman.min.js","sourcesContent":["\r\n\r\nvar backman = angular.module('backman', ['ui.router']);\r\n\r\nbackman.config(function ($httpProvider, $urlRouterProvider, $controllerProvider, $compileProvider, $filterProvider, $provide) {\r\n\r\n    'use strict';\r\n\r\n    // 修正angularPost数据payload模式为formData模式\r\n    $httpProvider.defaults.headers.put['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    $httpProvider.defaults.headers.post['X-Requested-With'] = 'XMLHttpRequest';\r\n    $httpProvider.defaults.headers.get = {'X-Requested-With': 'XMLHttpRequest'};\r\n\r\n    // Override $http service's default transformRequest\r\n    $httpProvider.defaults.transformRequest = [function (data) {\r\n        /**\r\n         * The workhorse; converts an object to x-www-form-urlencoded serialization.\r\n         * @param {Object} obj\r\n         * @return {String}\r\n         */\r\n        var param = function (obj) {\r\n            var query = '';\r\n            var name, value, fullSubName, subName, subValue, innerObj, i;\r\n            for (name in obj) {\r\n                if (obj.hasOwnProperty(name)) {\r\n                    value = obj[name];\r\n                    if (value instanceof Array) {\r\n                        for (i = 0; i < value.length; ++i) {\r\n                            subValue = value[i];\r\n                            fullSubName = name + '[' + i + ']';\r\n                            innerObj = {};\r\n                            innerObj[fullSubName] = subValue;\r\n                            query += param(innerObj) + '&';\r\n                        }\r\n                    } else if (value instanceof Object) {\r\n                        for (subName in value) {\r\n                            if (value.hasOwnProperty(subName)) {\r\n                                subValue = value[subName];\r\n                                /* fullSubName = name + '[' + subName + ']'; //for node */\r\n                                fullSubName = name + '.' + subName;\r\n                                innerObj = {};\r\n                                innerObj[fullSubName] = subValue;\r\n                                query += param(innerObj) + '&';\r\n                            }\r\n                        }\r\n                    } else if (value !== undefined && value !== null) {\r\n                        query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';\r\n                    }\r\n                }\r\n            }\r\n            return query.length ? query.substr(0, query.length - 1) : query;\r\n        };\r\n        return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data;\r\n    }];\r\n\r\n    //增加angular自动过滤特殊url白名单\r\n    $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|ftp|mailto|tel|file|sms|javascript):/);\r\n\r\n    //异步controller注册器\r\n    ysf.register = {\r\n        controller: $controllerProvider.register,\r\n        directive: $compileProvider.directive,\r\n        filter: $filterProvider.register,\r\n        factory: $provide.factory,\r\n        service: $provide.service\r\n    };\r\n\r\n});\r\n\r\nbackman.run(function ($rootScope, $state, $stateParams) {\r\n\r\n    'use strict';\r\n\r\n    $rootScope.$state = $state;\r\n    $rootScope.$stateParams = $stateParams;\r\n\r\n});\r\n\r\n\r\n\r\n","// 服务：请求预处理\r\nbackman.factory('_responePreHandler', function (_tools) {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        //正常通行\r\n        success: function (success, config) {\r\n            if (success.data.state.code == 20001 && config && config.noVerify == true) {\r\n                return;\r\n            }\r\n            if (success.data.state.code == 20001) {\r\n                window.location.href = '/usercenter/login-show';\r\n                return;\r\n            }\r\n            //code级报错\r\n            if (success.data.state.code != 10200 && success.data.state.code != 10205) {\r\n                success.data.data = null;\r\n                //throw new Error('Server Error!\\n\\r   success + '\\n\\r   Message: ' + data.state.msg);\r\n                alert(success.msg || (success.data && success.data.state && success.data.state.msg));\r\n                return null;\r\n            }\r\n            //正常code\r\n            if (success.data.state.code == 10205) {\r\n                return {};\r\n            } else {\r\n                var data = success.data.data ? _tools.transKeyName('camel', success.data.data) : {};\r\n                data.__state = success.data.state;\r\n                return data;\r\n            }\r\n        },\r\n        //http级报错\r\n        error: function (err) {\r\n            return err;\r\n        }\r\n    };\r\n\r\n});\r\n\r\nbackman.factory('_httpPost', function ($http, _tools, _responePreHandler, _setting) {\r\n\r\n    'use strict';\r\n\r\n    return function (url, postData, config) {\r\n        if (!config || !config.ajaxParams) {\r\n            angular.extend(postData, _setting.ajaxParams);\r\n        }\r\n        postData = _tools.transKeyName('underline', postData);\r\n        return $http({\r\n            method: 'POST',\r\n            url: url,\r\n            data: postData\r\n        }).then(function (success) {\r\n                return _responePreHandler.success(success, config);\r\n            }, function (err) {\r\n                return _responePreHandler.error(err);\r\n            }\r\n        );\r\n    };\r\n\r\n});\r\n\r\nbackman.factory('_httpGet', function ($http, _tools, _responePreHandler, _setting) {\r\n\r\n    'use strict';\r\n\r\n    return function (url, getData, config) {\r\n        if (!config || !config.ajaxParams) {\r\n            angular.extend(getData, _setting.ajaxParams);\r\n        }\r\n        getData = _tools.transKeyName('underline', getData);\r\n        return $http({\r\n            method: 'GET',\r\n            url: url,\r\n            params: getData\r\n        }).then(function (success) {\r\n            return _responePreHandler.success(success, config);\r\n        }, function (err) {\r\n            return _responePreHandler.error(err);\r\n        });\r\n    };\r\n\r\n});","backman.factory('_setting', function ($rootScope) {\r\n\r\n    'use strict';\r\n\r\n    var data = {\r\n        base: location.protocol + '//' + location.host,\r\n        path: ''\r\n        // ,ajaxParams: {\"authClient\": \"app\", \"apiVersion\": \"v1\"}\r\n    };\r\n\r\n    return {\r\n        get: function (key) {\r\n            return data[key];\r\n        },\r\n        set: function (key, val) {\r\n            data[key] = val\r\n        }\r\n    };\r\n\r\n});","\r\nbackman.factory('_tools', function () {\r\n\r\n    'use strict';\r\n\r\n    //获取url参数\r\n    var urlData = null;\r\n    var getUrlParam = function (name) {\r\n        if (!urlData) {\r\n            var url = window.location.href;\r\n            urlData = {};\r\n            var arr = url.split(\"?\");\r\n            if (arr.length > 1) {\r\n                arr = arr[1].split(\"&\");\r\n                for (var i = 0, l = arr.length; i < l; i++) {\r\n                    var a = arr[i].split(\"=\");\r\n                    urlData[a[0]] = a[1];\r\n                }\r\n                urlData = transKeyName('camel', urlData);\r\n            }\r\n        }\r\n        return urlData[name];\r\n    };\r\n\r\n    //峰驼与下划线命名模式转换\r\n    var transKeyName = function (type, json) {\r\n        //下划线字符串转小峰驼\r\n        var toCamel = function (str) {\r\n            var str2 = '';\r\n            if (str.indexOf('_') < 0) {\r\n                str2 = str;\r\n            } else {\r\n                var words = str.split('_');\r\n                for (var i = 1; i < words.length; i++) {\r\n                    words[i] = words[i].substr(0, 1).toUpperCase() + words[i].substr(1);\r\n                }\r\n                str2 = words.join('');\r\n            }\r\n            return str2;\r\n        };\r\n        //小峰驼字符串转下划线\r\n        var toUnderline = function (str) {\r\n            var str2 = '';\r\n            if ((/[A-Z]/).test(str)) {\r\n                str2 = str.replace(/([A-Z])/g, function ($1) {\r\n                    return '_' + $1.toLowerCase();\r\n                });\r\n            } else {\r\n                str2 = str;\r\n            }\r\n            return str2;\r\n        };\r\n        var transform = function (json, json2) {\r\n            for (var p in json) {\r\n                if (json.hasOwnProperty(p)) {\r\n                    var key;\r\n                    if (typeof p == 'string') {\r\n                        if (type == 'camel') {\r\n                            key = toCamel(p);\r\n                        } else if (type == 'underline') {\r\n                            key = toUnderline(p);\r\n                        }\r\n                    } else {\r\n                        key = p;\r\n                    }\r\n                    if (json[p] instanceof Object) {\r\n                        json2[key] = transform(json[p], typeof json[p].length == 'undefined' ? {} : []);\r\n                    } else {\r\n                        json2[key] = json[p];\r\n                    }\r\n                }\r\n            }\r\n            return json2;\r\n        };\r\n        return transform(json, typeof json.length == 'undefined' ? {} : []);\r\n    };\r\n\r\n    var loadJs = function (jsList) {\r\n        return function ($q, $rootScope) {\r\n            var deferred = $q.defer();\r\n            $script(jsList, function () {\r\n                $rootScope.$apply(function () {\r\n                    deferred.resolve();\r\n                });\r\n            });\r\n            return deferred.promise;\r\n        };\r\n    };\r\n\r\n    return {\r\n        getUrlParam: getUrlParam,\r\n        transKeyName: transKeyName,\r\n        loadJs: loadJs\r\n    };\r\n\r\n});","backman.factory('_validate', function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n        isMobile: function (val) {\r\n            var rgx = /^(13[0-9]|14[0-9]|15[0-9]|18[0-9])\\d{8}$/i;\r\n            return rgx.test($.trim(val));\r\n        },\r\n        isRequired: function (val) {\r\n            return $.trim(val) ? true : false;\r\n        },\r\n        isMatchLength: function (val, len) {\r\n            return (($.trim(val)).length == len);\r\n        },\r\n        isLengthInRange: function (val, arr) {\r\n            var len = ($.trim(val)).length;\r\n            return (len >= arr[0] && len <= arr[1]);\r\n        },\r\n        isInRange: function (val, arr) {\r\n            return (val >= arr[0] && val <= arr[1]);\r\n        },\r\n        isIdCard: function (val) {\r\n            var rgx = /^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{4}$/;\r\n            return rgx.test($.trim(val));\r\n        },\r\n        isTheSame: function (val1, val2) {\r\n            return (val1 == val2);\r\n        },\r\n        // 验证密码\r\n        isCorrectPassword: function (val) {\r\n            // 只包含数字或字母\r\n            var rgx = /^(?!\\d+$)(?![a-z]+$).+$/i;\r\n            return rgx.test($.trim(val));\r\n        }\r\n    };\r\n});"],"sourceRoot":"build/backman/"}